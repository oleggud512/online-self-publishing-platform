name: client
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.19.0 <3.0.0'

# dart pub global activate rps
scripts:
  # rps cw
  watch: "flutter pub run build_runner watch --delete-conflicting-outputs"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  firebase_core: ^2.4.1
  firebase_auth: ^4.2.5
  go_router: ^6.0.2
  dio: ^5.0.1
  flutter_riverpod: ^2.1.3
  riverpod_annotation: ^2.0.0
  build_runner: ^2.3.3
  freezed_annotation: ^2.2.0
  json_annotation: ^4.7.0
  font_awesome_flutter: ^10.3.0
  google_sign_in: ^6.0.1
  image_picker: 
  permission_handler: ^10.2.0
  device_info_plus: ^8.0.0
  firebase_storage: ^11.0.11
  flutter_localizations:
    sdk: flutter
  intl: ^0.17.0
  shared_preferences: ^2.0.17
  i69n: ^2.1.0
  logger: ^1.1.0
  flutter_dotenv: ^5.0.2
  pull_to_refresh: ^2.0.0
  sembast: ^3.4.0+6
  path_provider: ^2.0.12
  equatable: ^2.0.5
  socket_io_client: ^2.0.1
  rxdart: ^0.27.7
  # firebase_messaging: ^14.3.0
  firebase_messaging: ^14.3.0
  flutter_local_notifications: ^13.0.0
  sembast_web: ^2.1.2
  flutter_quill: ^7.1.2
  webview_flutter: ^4.0.7
  flutter_html: ^3.0.0-alpha.6

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  freezed: ^2.3.2
  riverpod_generator: ^2.0.0
  json_serializable: ^6.5.4
  custom_lint: ^0.3.2
  riverpod_lint: ^1.0.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - .env
    - assets/policy.html
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
